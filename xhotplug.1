.Dd 2020-07-04
.Dt XHOTPLUG 1
.Os
.Sh NAME
.Nm xhotplug
.Nd X11 monitor attach/detach event responder
.Sh SYNOPSIS
.Nm
.Op Fl vh
.Ar script
.Sh DESCRIPTION
.Nm
is a simple tool designed to respond to X11 monitor attach/detach
events.
It can be used on systems without udev to, for example, dynamically
reconfigure monitors via
.Xr xrandr 1 .
.Pp
Upon invocation,
.Nm
reads the required
.Ar script
argument and checks that the file pointed to by it can be executed.
The file pointed to by
.Ar script
is considered not to be executable if one of the following conditions
is met:
.Pp
.Bl -bullet -compact
.It
The file for directory containing
.Ar script
does not exist or cannot be read.
.It
The file is world-writeable.
.It
The file is not owned by the current user or the superuser.
.It
The file's executable bit is not set.
.El
.Pp
If the above checks pass,
.Nm
waits for monitor attach/detach events, calling
.Ar script
whenever one is received.
.Sh OPTIONS
.Bl -tag -width Ds
.It Fl v
Print version and exit.
.It Fl h
Print usage and exit.
.El
.Sh EXAMPLES
There are several ways to make use of xhotplug.
The easiest is to add the following line to
.Pa $HOME/.xession
(or
.Pa $HOME/.xinitrc
if you use xinit):
.Pp
.Dl xhotplug script &
.Pp
Many desktop environments provide a way to add startup programs,
although they probably also detect new displays on their own.
.Pp
The script called by
.Nm
must be able to determine which monitors are currently connected and respond accordingly.
The below script does this, using
.Xr xrandr 1
to configure the screen:
.Pp
.Bd -literal -offset indent -compact
#!/bin/sh

expected="eDP-1 DP-1-3"

for mon in $expected
do
	if xrandr -q | grep $mon | grep ' connected' >/dev/null 2>&1
	then
		connected="$connected $mon"
	else
		disconnected="$disconnected $mon"
	fi
done

cmd="xrandr --dpi eDP-1"

for mon in $connected
do
	if [ "$mon" = "eDP-1" ]
	then
		cmd="$cmd --output eDP-1 --auto --primary"
	elif [ "$mon" = "DP-1-3" ]
	then
		cmd="$cmd --output DP-1-3 --auto --right-of eDP-1 --scale 2x2"
	fi
done

for mon in $disconnected
do
	cmd="$cmd --output $mon --off"
done

echo "my-screen.local: Running cmd $cmd" >> "$HOME/var/log/my"
$cmd
.Eb
.Sh EXIT STATUS
.Ex -std
.Sh SEE ALSO
.Xr xrandr 1
.Sh HISTORY
.Nm
is based on a
.Lk https://gist.github.com/mafrasi2/4ee01e0ba4dad20cf7a80ae463f32fca "Gist by GitHub user mafrasi2" .
.Sh AUTHORS
.Nm
was written by
.An Daniel Moch Aq Mt daniel@danielmoch.com .
